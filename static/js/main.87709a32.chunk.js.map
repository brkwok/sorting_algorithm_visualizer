{"version":3,"sources":["util/generateArray.js","util/helpers/swap.js","util/algorithms/bubbleSort.js","util/algorithms/selectionSort.js","util/algorithms/quickSort.js","util/algorithms/mergeSort.js","components/Array/Array.js","util/helpers/constants.js","components/Header/Dropdown.js","components/Header/HeaderLeft.js","components/Header/HeaderRight.js","components/Header/Header.js","components/SortVisual/SortVisual.js","App.js","index.js"],"names":["generateArray","size","arr","i","obj","val","Math","floor","random","type","className","push","swap","j","a","temp","bubbleSort","visualizeQueue","length","swapped","selectionSort","minIdx","quickSort","lo","hi","partition","partIdx","pivot","mergeSort","left","right","mid","parseInt","merge","size1","size2","tempLeft","Array","tempRight","leftArrPointer","rightArrPointer","mergedPointer","state","isSorting","currAlgo","componentDidMount","generateNewArray","componentDidUpdate","pp","_","algorithm","props","setState","newArray","getQueue","queue","visualize","arrCopy","slice","curr","shift","visualizeQueueRange","visualizeQueueSwap","visualizeQueueNoneSwap","done","updateState","idxToChange","range","elementsToSwap","updateStyle","elements","timeOut","indices","bool","getClassType","Promise","resolve","setTimeout","this","id","disabled","onClick","map","num","key","toString","style","height","width","React","Component","Dropdown","setAlgorithm","e","HeaderLeft","icon","faCaretUp","HeaderRight","target","rel","href","faGithub","faLinkedin","faAngellist","Header","SortVisual","preventDefault","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87709a32.chunk.js","sourcesContent":["export const generateArray = (size) => {\n  let arr = [];\n\n  for (let i = 0; i < size; i++) {\n    let obj = {};\n\n    obj.val = Math.floor(Math.random() * 100) + 1;\n    obj.type = \"normal\";\n    obj.className = \"inactive\";\n\n    arr.push(obj);\n  }\n\n  return arr;\n}","export const swap = async (arr, i, j) => {\n  const temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n}","import { swap } from \"../helpers/swap\";\n\nexport const bubbleSort = async (arr) => {\n  let visualizeQueue = [];\n\n  for (let i = 0; i < arr.length - 1; i++) {\n    let swapped = false;\n    for (let j = 0; j < arr.length - i - 1; j++) {\n      if (arr[j].val > arr[j + 1].val) {\n        await swap(arr, j, j + 1);\n        visualizeQueue.push([j, j + 1, true]);\n        swapped = true;\n      } else {\n        visualizeQueue.push([j, j + 1, false]);\n      }\n    }\n\n    if (!swapped) {\n      break;\n    }\n  }\n\n  return visualizeQueue;\n};\n","import { swap } from \"../helpers/swap\";\n\nexport const selectionSort = async (arr) => {\n  let visualizeQueue = [];\n\n  for (let i = 0; i < arr.length  - 1; i++) {\n    let minIdx = i;\n\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[minIdx].val > arr[j].val) {\n        minIdx = j;\n      } \n      visualizeQueue.push([i, j, false]);\n    }\n    \n    await swap(arr, minIdx, i);\n    visualizeQueue.push([minIdx, i, true]);\n    \n  }\n\n  return visualizeQueue;\n}","import { swap } from \"../helpers/swap\";\n\nexport const quickSort = async (arr, lo, hi, visualizeQueue = []) => {\n  if (lo < hi) {\n    let partIdx = await partition(arr, lo, hi, visualizeQueue);\n\n    quickSort(arr, lo, partIdx - 1, visualizeQueue);\n    quickSort(arr, partIdx + 1, hi, visualizeQueue);\n  }\n\n  return visualizeQueue;\n};\n\nconst partition = async (arr, lo, hi, visualizeQueue) => {\n  let pivot = arr[hi].val;\n\n  let i = lo - 1;\n\n  for (let j = lo; j < hi; j++) {\n    if (arr[j].val <= pivot) {\n      i++;\n\n      await swap(arr, i, j, true);\n      visualizeQueue.push([i, j, true, hi]);\n    }\n  }\n\n  await swap(arr, i + 1, hi);\n  visualizeQueue.push([i + 1, hi, true, i + 1]);\n\n  return i + 1;\n};\n","export const mergeSort = (arr, left, right, visualizeQueue = []) => {\n  if (left >= right) {\n    return;\n  }\n\n  // prevent overflow\n  let mid = left + parseInt((right - left) / 2);\n\n  mergeSort(arr, left, mid, visualizeQueue);\n  mergeSort(arr, mid + 1, right, visualizeQueue);\n  merge(arr, left, mid, right, visualizeQueue);\n\n  return visualizeQueue;\n};\n\nconst merge = (arr, left, mid, right, visualizeQueue) => {\n  const size1 = mid - left + 1;\n  const size2 = right - mid;\n\n  let tempLeft = new Array(size1);\n  let tempRight = new Array(size2);\n\n  for (let i = 0; i < size1; i++) {\n    tempLeft[i] = arr[left + i];\n  }\n\n  for (let i = 0; i < size2; i++) {\n    tempRight[i] = arr[mid + i + 1];\n  }\n\n  let leftArrPointer = 0;\n  let rightArrPointer = 0;\n  let mergedPointer = left;\n\n  while (leftArrPointer < size1 && rightArrPointer < size2) {\n    if (tempLeft[leftArrPointer].val <= tempRight[rightArrPointer].val) {\n      visualizeQueue.push([mergedPointer, tempLeft[leftArrPointer].val, [left, right]])\n      arr[mergedPointer] = tempLeft[leftArrPointer];\n      leftArrPointer++;\n    } else {\n      visualizeQueue.push([mergedPointer, tempRight[rightArrPointer].val, [left, right]])\n      arr[mergedPointer] = tempRight[rightArrPointer];\n      rightArrPointer++;\n    }\n    mergedPointer++;\n  }\n\n  while (leftArrPointer < size1) {\n    visualizeQueue.push([mergedPointer, tempLeft[leftArrPointer].val, [left, right]])\n    arr[mergedPointer] = tempLeft[leftArrPointer];\n    leftArrPointer++;\n    mergedPointer++;\n  }\n\n  while (rightArrPointer < size2) {\n    visualizeQueue.push([mergedPointer, tempRight[rightArrPointer].val, [left, right]])\n    arr[mergedPointer] = tempRight[rightArrPointer];\n    rightArrPointer++;\n    mergedPointer++;\n  }\n};\n","import React from \"react\";\nimport { generateArray } from \"../../util/generateArray\";\nimport { bubbleSort } from \"../../util/algorithms/bubbleSort\";\nimport { selectionSort } from \"../../util/algorithms/selectionSort\";\nimport { quickSort } from \"../../util/algorithms/quickSort\";\n\nimport {\n  DEFAULT_ARR_SIZE,\n  SORTING_SPEED,\n  INACTIVE,\n  ACTIVE,\n  SEARCHING,\n} from \"../../util/helpers/constants\";\nimport { mergeSort } from \"../../util/algorithms/mergeSort\";\n\nclass Array extends React.Component {\n  state = {\n    arr: [],\n    isSorting: false,\n    currAlgo: \"Bubble Sort\",\n  };\n\n  componentDidMount = async () => {\n    await this.generateNewArray();\n  };\n\n  componentDidUpdate = async (pp, _) => {\n    if (pp.algorithm !== this.props.algorithm) {\n      let currAlgo = \"\";\n      if (this.props.algorithm === \"bubbleSort\") {\n        currAlgo = \"Bubble Sort\";\n      } else if (this.props.algorithm === \"selectionSort\") {\n        currAlgo = \"Selection Sort\";\n      } else if (this.props.algorithm === \"mergeSort\") {\n        currAlgo = \"Merge Sort\";\n      } else if (this.props.algorithm === \"quickSort\") {\n        currAlgo = \"Quick Sort\";\n      }\n\n      await this.setState({ currAlgo });\n    }\n  };\n\n  generateNewArray = async () => {\n    let newArray = generateArray(DEFAULT_ARR_SIZE);\n\n    await this.setState({ arr: newArray });\n  };\n\n  getQueue = async (arr) => {\n    let queue = [];\n\n    if (this.props.algorithm === \"bubbleSort\") {\n      queue = await bubbleSort(arr);\n    } else if (this.props.algorithm === \"selectionSort\") {\n      queue = await selectionSort(arr);\n    } else if (this.props.algorithm === \"mergeSort\") {\n      queue = await mergeSort(arr, 0, arr.length - 1);\n    } else if (this.props.algorithm === \"quickSort\") {\n      queue = await quickSort(arr, 0, arr.length - 1);\n    }\n\n    return queue;\n  };\n\n  visualize = async () => {\n    await this.setState({ isSorting: true });\n    let arrCopy = this.state.arr.slice();\n    let queue = await this.getQueue(arrCopy);\n\n    if (queue.length < 1) {\n      return;\n    }\n\n    arrCopy = this.state.arr.slice();\n\n    while (queue.length > 0) {\n      let curr = queue.shift();\n      if (this.props.algorithm === \"mergeSort\") {\n        await this.visualizeQueueRange(curr[0], curr[1], curr[2], arrCopy);\n      } else {\n        if (curr[2]) {\n          await this.visualizeQueueSwap(curr, arrCopy);\n        } else {\n          await this.visualizeQueueNoneSwap(curr, arrCopy);\n        }\n      }\n    }\n\n    await this.done(this.state.arr);\n    await this.setState({ isSorting: false });\n  };\n\n  done = async (arr) => {\n    for (let i = 0; i < arr.length; i++) {\n      arr[i].className = \"finished\";\n      await this.updateState(arr);\n    }\n  };\n\n  visualizeQueueRange = async (idxToChange, val, range, arr) => {\n    for (let i = 0; i < arr.length; i++) {\n      if (i >= range[0] && i <= range[1]) {\n        arr[i].className = \"active\";\n      } else {\n        arr[i].className = \"inactive\";\n      }\n    }\n\n    arr[idxToChange].val = val;\n    await this.updateState(arr);\n  };\n\n  visualizeQueueSwap = async (elementsToSwap, arr) => {\n    await this.updateStyle(arr, elementsToSwap, ACTIVE);\n\n    let temp = arr[elementsToSwap[0]].val;\n    arr[elementsToSwap[0]].val = arr[elementsToSwap[1]].val;\n    arr[elementsToSwap[1]].val = temp;\n\n    await this.updateState(arr);\n    await this.updateStyle(arr, elementsToSwap, INACTIVE);\n  };\n\n  visualizeQueueNoneSwap = async (elements, arr) => {\n    await this.updateStyle(arr, elements, SEARCHING);\n    await this.updateState(arr);\n    await this.updateStyle(arr, elements, INACTIVE);\n  };\n\n  updateState = async (arr) => {\n    this.setState({ arr: [...arr] });\n    await this.timeOut();\n  };\n\n  updateStyle = async (arr, indices, bool) => {\n    if (indices[3]) {\n      arr[indices[3]].className = await this.getClassType(SEARCHING);\n    }\n    arr[indices[0]].className = await this.getClassType(bool);\n    arr[indices[1]].className = await this.getClassType(bool);\n\n    await this.updateState(arr);\n  };\n\n  getClassType = async (type) => {\n    if (type === INACTIVE) {\n      return \"inactive\";\n    } else if (type === ACTIVE) {\n      return \"active\";\n    } else if (type === SEARCHING) {\n      return \"searching\";\n    }\n  };\n\n  timeOut = async () => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve();\n      }, SORTING_SPEED);\n    });\n  };\n\n  render() {\n    return (\n      <section className=\"chart-container\">\n        <h1 className=\"chart-current-algo\">{this.state.currAlgo}</h1>\n        <div id=\"array-button-container\">\n          <button\n            disabled={this.state.isSorting}\n            id=\"array-generate\"\n            onClick={this.generateNewArray}\n          >\n            Generate New Chart\n          </button>\n          <button\n            disabled={this.state.isSorting}\n            id=\"array-generate\"\n            onClick={this.visualize}\n          >\n            Sort\n          </button>\n        </div>\n        <div id=\"array-container\">\n          {this.state.arr.map((num, i) => {\n            let key = num.val.toString() + \" \" + i.toString();\n\n            return (\n              <div\n                id=\"array-bar\"\n                className={`bar ${num.className}`}\n                key={key}\n                style={{\n                  height: `${num.val}%`,\n                  width: `calc(100vw / ${DEFAULT_ARR_SIZE} - 4px)`,\n                }}\n              ></div>\n            );\n          })}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Array;\n","export const DEFAULT_ARR_SIZE = 30;\nexport const SORTING_SPEED = 25;\n\nexport const INACTIVE = 0;\nexport const ACTIVE = 1;\nexport const SEARCHING = 2;","import React from \"react\";\n\nexport default function Dropdown({ setAlgorithm }) {\n  return (\n    <div id=\"header-dropdown-fields\" className=\"header-dropdown-fields\">\n      <div id=\"header-dropdown-algo-list\">\n        <div onClick={(e) => setAlgorithm(e)} id=\"bubbleSort\">\n          Bubble Sort\n        </div>\n        <div onClick={(e) => setAlgorithm(e)} id=\"selectionSort\">\n          Selection Sort\n        </div>\n        <div onClick={(e) => setAlgorithm(e)} id=\"quickSort\">\n          Quick Sort\n        </div>\n        <div onClick={(e) => setAlgorithm(e)} id=\"mergeSort\">\n          Merge Sort\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\nimport Dropdown from \"./Dropdown\";\n\nexport default function HeaderLeft({ setAlgorithm }) {\n  return (\n    <div id=\"header-left\">\n      <div id=\"header-title\">Sorting Visualizer</div>\n      <div id=\"header-dropdown\">\n        <span id=\"header-dropdown-title\">Sorting Algorithms</span>\n        <FontAwesomeIcon\n          id=\"header-caret\"\n          className=\"header-caret\"\n          icon={faCaretUp}\n        />\n        <Dropdown setAlgorithm={setAlgorithm} />\n      </div>\n    </div>\n  );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLinkedin,\n  faGithub,\n  faAngellist,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nexport default function HeaderRight() {\n  return (\n    <div id=\"header-right\">\n      <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com//brkwok\">\n        <FontAwesomeIcon icon={faGithub} />\n      </a>\n      <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.linkedin.com/in/br-kwok/\">\n        <FontAwesomeIcon icon={faLinkedin} />\n      </a>\n      <a target=\"_blank\" rel=\"noreferrer\" href=\"https://angel.co/u/brkwok\">\n        <FontAwesomeIcon icon={faAngellist} />\n      </a>\n    </div>\n  );\n}\n","import React from \"react\";\nimport HeaderLeft from \"./HeaderLeft\";\nimport HeaderRight from \"./HeaderRight\";\n\nexport default function Header({ setAlgorithm }) {\n  return (\n    <section id=\"header-container\">\n      <HeaderLeft setAlgorithm={ setAlgorithm }/>\n      <HeaderRight />\n    </section>\n  );\n}\n","import React from \"react\";\nimport Array from \"../Array/Array\";\nimport Header from \"../Header/Header\";\n\nclass SortVisual extends React.Component {\n  state = {\n    algorithm: \"bubbleSort\",\n  };\n\n  setAlgorithm = (e) => {\n    e.preventDefault();\n\n    this.setState({\n      algorithm: e.target.id,\n    });\n  };\n\n  render() {\n    console.log(this.state.algorithm); // FIXME: REMOVE\n    return (\n      <>\n        <Header setAlgorithm={this.setAlgorithm} />\n        <Array algorithm={this.state.algorithm}/>\n      </>\n    );\n  }\n}\n\nexport default SortVisual;\n","import React from \"react\";\nimport SortVisual from \"./components/SortVisual/SortVisual\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortVisual />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}